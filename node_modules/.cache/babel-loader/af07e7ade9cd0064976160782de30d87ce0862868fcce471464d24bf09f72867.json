{"ast":null,"code":"var _jsxFileName = \"D:\\\\faltu project\\\\speedtest.js\\\\src\\\\pages\\\\SpeedTest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { FiDownload, FiUpload, FiClock, FiRefreshCw, FiShare2, FiSave } from 'react-icons/fi';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeedTest = () => {\n  _s();\n  const [isRunning, setIsRunning] = useState(false);\n  const [downloadSpeed, setDownloadSpeed] = useState(0);\n  const [uploadSpeed, setUploadSpeed] = useState(0);\n  const [ping, setPing] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [currentTest, setCurrentTest] = useState('');\n  const [testHistory, setTestHistory] = useState([]);\n  const [chartData, setChartData] = useState([]);\n  const gaugeRef = useRef(null);\n\n  // Load test history from localStorage on component mount\n  useEffect(() => {\n    const savedHistory = localStorage.getItem('speedTestHistory');\n    if (savedHistory) {\n      setTestHistory(JSON.parse(savedHistory));\n    }\n  }, []);\n\n  // Update gauge fill based on current speed\n  useEffect(() => {\n    if (!gaugeRef.current) return;\n    const speed = currentTest === 'download' ? downloadSpeed : uploadSpeed;\n    const maxSpeed = 200; // Maximum speed for gauge (200 Mbps)\n    const percentage = Math.min(speed / maxSpeed * 100, 100);\n\n    // Calculate the stroke-dasharray and stroke-dashoffset\n    const circumference = 2 * Math.PI * 70;\n    const dashOffset = circumference * (1 - percentage / 100);\n    gaugeRef.current.style.strokeDashoffset = dashOffset;\n  }, [downloadSpeed, uploadSpeed, currentTest]);\n\n  // Simulate speed test\n  const runSpeedTest = () => {\n    setIsRunning(true);\n    setProgress(0);\n    setDownloadSpeed(0);\n    setUploadSpeed(0);\n    setPing(0);\n    setChartData([]);\n\n    // Simulate ping test\n    setCurrentTest('ping');\n    setTimeout(() => {\n      const pingValue = Math.floor(Math.random() * 30) + 10; // 10-40ms\n      setPing(pingValue);\n\n      // Simulate download test\n      setCurrentTest('download');\n      simulateSpeedTest('download', 8000); // 8 seconds for download test\n    }, 1000);\n  };\n\n  // Simulate speed test with realistic fluctuations\n  const simulateSpeedTest = (type, duration) => {\n    const CHART_UPDATE_MS = 500; // throttle chart updates to every 500ms\n    const startTime = Date.now();\n    const endTime = startTime + duration;\n    const maxSpeed = type === 'download' ? 200 : 100; // Max download: 200Mbps, Max upload: 100Mbps\n    const baseSpeed = type === 'download' ? Math.floor(Math.random() * 100) + 50 // 50-150 Mbps for download\n    : Math.floor(Math.random() * 50) + 20; // 20-70 Mbps for upload\n\n    // Local accumulator to prevent state thrashing\n    let newChartData = [...chartData];\n    const updateSpeed = () => {\n      const now = Date.now();\n      const elapsedTime = now - startTime;\n      if (now >= endTime) {\n        // Test complete\n        if (type === 'download') {\n          setCurrentTest('upload');\n          simulateSpeedTest('upload', 5000);\n        } else {\n          const testResult = {\n            id: Date.now(),\n            date: new Date().toLocaleString(),\n            download: downloadSpeed,\n            upload: uploadSpeed,\n            ping: ping\n          };\n          const updatedHistory = [testResult, ...testHistory].slice(0, 10);\n          setTestHistory(updatedHistory);\n          localStorage.setItem('speedTestHistory', JSON.stringify(updatedHistory));\n          setIsRunning(false);\n          setCurrentTest('');\n        }\n        return;\n      }\n\n      // Calculate progress percentage\n      const progressPercentage = elapsedTime / duration * 100;\n      setProgress(progressPercentage);\n\n      // Simulate smoother fluctuations\n      const fluctuation = Math.sin(elapsedTime / 800) * 8;\n      const randomFactor = (Math.random() - 0.5) * 6;\n      const speedFactor = Math.min(elapsedTime / (duration * 0.4), 1);\n      const calculatedSpeed = baseSpeed * speedFactor + fluctuation + randomFactor;\n      const clampedSpeed = Math.max(Math.min(calculatedSpeed, maxSpeed), 0).toFixed(1);\n      if (type === 'download') setDownloadSpeed(parseFloat(clampedSpeed));else setUploadSpeed(parseFloat(clampedSpeed));\n\n      // update chart data (throttled)\n      newChartData.push({\n        time: Math.round(elapsedTime / 100) / 10,\n        [type]: parseFloat(clampedSpeed)\n      });\n      if (newChartData.length > 30) newChartData.shift();\n      setChartData([...newChartData]);\n      setTimeout(updateSpeed, CHART_UPDATE_MS);\n    };\n    updateSpeed();\n  };\n\n  // Format speed with appropriate unit\n  const formatSpeed = speed => {\n    if (speed < 1) return `${(speed * 1000).toFixed(0)} Kbps`;\n    return `${speed} Mbps`;\n  };\n\n  // Page transition variants\n  const pageVariants = {\n    initial: {\n      opacity: 0,\n      y: 20\n    },\n    animate: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5\n      }\n    },\n    exit: {\n      opacity: 0,\n      y: -20,\n      transition: {\n        duration: 0.3\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    initial: \"initial\",\n    animate: \"animate\",\n    exit: \"exit\",\n    variants: pageVariants,\n    children: /*#__PURE__*/_jsxDEV(ContentWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(SpeedTestCard, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Internet Speed Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Test your connection speed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GaugeContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 200 100\",\n            className: \"gauge\",\n            children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n              children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n                id: \"gaugeGradient\",\n                x1: \"0%\",\n                y1: \"0%\",\n                x2: \"100%\",\n                y2: \"0%\",\n                children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n                  offset: \"0%\",\n                  stopColor: \"#00f2fe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n                  offset: \"100%\",\n                  stopColor: \"#4facfe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              className: \"gauge-background\",\n              d: \"M20,90 A70,70 0 1,1 180,90\",\n              fill: \"none\",\n              stroke: \"rgba(255, 255, 255, 0.1)\",\n              strokeWidth: \"8\",\n              strokeLinecap: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              ref: gaugeRef,\n              className: \"gauge-fill\",\n              d: \"M20,90 A70,70 0 1,1 180,90\",\n              fill: \"none\",\n              stroke: \"url(#gaugeGradient)\",\n              strokeWidth: \"8\",\n              strokeLinecap: \"round\",\n              strokeDasharray: \"439.6\",\n              strokeDashoffset: \"439.6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: \"100\",\n              y: \"75\",\n              textAnchor: \"middle\",\n              fontSize: \"24\",\n              fontWeight: \"bold\",\n              fill: \"white\",\n              children: currentTest === 'download' ? downloadSpeed : uploadSpeed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: \"100\",\n              y: \"95\",\n              textAnchor: \"middle\",\n              fontSize: \"12\",\n              fill: \"rgba(255, 255, 255, 0.7)\",\n              children: \"Mbps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), isRunning && /*#__PURE__*/_jsxDEV(TestIndicator, {\n            children: [/*#__PURE__*/_jsxDEV(TestLabel, {\n              children: currentTest === 'ping' ? 'Testing Ping...' : currentTest === 'download' ? 'Download Test' : 'Upload Test'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n              children: /*#__PURE__*/_jsxDEV(ProgressFill, {\n                style: {\n                  width: `${progress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricsContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MetricBox, {\n            children: [/*#__PURE__*/_jsxDEV(MetricIcon, {\n              children: /*#__PURE__*/_jsxDEV(FiDownload, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MetricValue, {\n              children: downloadSpeed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MetricLabel, {\n              children: \"Download (Mbps)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MetricBox, {\n            children: [/*#__PURE__*/_jsxDEV(MetricIcon, {\n              children: /*#__PURE__*/_jsxDEV(FiUpload, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MetricValue, {\n              children: uploadSpeed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MetricLabel, {\n              children: \"Upload (Mbps)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MetricBox, {\n            children: [/*#__PURE__*/_jsxDEV(MetricIcon, {\n              children: /*#__PURE__*/_jsxDEV(FiClock, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MetricValue, {\n              children: ping\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MetricLabel, {\n              children: \"Ping (ms)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: 200,\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: chartData,\n              margin: {\n                top: 5,\n                right: 20,\n                left: 0,\n                bottom: 5\n              },\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\",\n                stroke: \"rgba(255,255,255,0.1)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"time\",\n                label: {\n                  value: 'Time (s)',\n                  position: 'insideBottomRight',\n                  offset: -5,\n                  fill: 'rgba(255,255,255,0.7)'\n                },\n                stroke: \"rgba(255,255,255,0.5)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                label: {\n                  value: 'Speed (Mbps)',\n                  angle: -90,\n                  position: 'insideLeft',\n                  fill: 'rgba(255,255,255,0.7)'\n                },\n                stroke: \"rgba(255,255,255,0.5)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                contentStyle: {\n                  backgroundColor: 'rgba(30, 41, 59, 0.9)',\n                  border: 'none',\n                  borderRadius: '8px',\n                  color: 'white'\n                },\n                formatter: value => [`${value} Mbps`],\n                labelFormatter: value => `Time: ${value}s`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"download\",\n                stroke: \"#00f2fe\",\n                strokeWidth: 2,\n                dot: false,\n                activeDot: {\n                  r: 6\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"upload\",\n                stroke: \"#4facfe\",\n                strokeWidth: 2,\n                dot: false,\n                activeDot: {\n                  r: 6\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(StartButton, {\n            onClick: runSpeedTest,\n            disabled: isRunning,\n            whileHover: {\n              scale: isRunning ? 1 : 1.05\n            },\n            whileTap: {\n              scale: isRunning ? 1 : 0.95\n            },\n            $isRunning: isRunning,\n            children: [isRunning ? 'Testing...' : 'Start Test', !isRunning && /*#__PURE__*/_jsxDEV(FiRefreshCw, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HistoryCard, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Test History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your recent speed tests\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), testHistory.length > 0 ? /*#__PURE__*/_jsxDEV(HistoryList, {\n          children: testHistory.map(test => /*#__PURE__*/_jsxDEV(HistoryItem, {\n            children: [/*#__PURE__*/_jsxDEV(HistoryDate, {\n              children: test.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(HistoryMetrics, {\n              children: [/*#__PURE__*/_jsxDEV(HistoryMetric, {\n                children: [/*#__PURE__*/_jsxDEV(FiDownload, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [test.download, \" Mbps\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(HistoryMetric, {\n                children: [/*#__PURE__*/_jsxDEV(FiUpload, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [test.upload, \" Mbps\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(HistoryMetric, {\n                children: [/*#__PURE__*/_jsxDEV(FiClock, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [test.ping, \" ms\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this)]\n          }, test.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(EmptyHistory, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No test history yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Run your first speed test to see results here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeedTest, \"L0N068cZwBNEhGDiu7ngm7RkVX0=\");\n_c = SpeedTest;\nconst PageContainer = styled(motion.div)`\n  padding: 6rem 1rem 2rem;\n  width: 100%;\n  max-width: 1400px;\n  margin: 0 auto;\n  min-height: 100vh;\n  \n  @media (max-width: ${({\n  theme\n}) => theme.breakpoints.md}) {\n    padding: 5rem 1rem 2rem;\n  }\n`;\n_c2 = PageContainer;\nconst ContentWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 350px;\n  gap: 1.5rem;\n  \n  @media (max-width: ${({\n  theme\n}) => theme.breakpoints.lg}) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c3 = ContentWrapper;\nconst Card = styled.div`\n  background: ${({\n  theme\n}) => theme.card};\n  border-radius: ${({\n  theme\n}) => theme.borderRadiusLg};\n  border: 1px solid ${({\n  theme\n}) => theme.cardBorder};\n  box-shadow: ${({\n  theme\n}) => theme.cardShadow};\n  backdrop-filter: ${({\n  theme\n}) => theme.blur};\n  overflow: hidden;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  \n  &:hover {\n    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.4);\n  }\n`;\nconst SpeedTestCard = styled(Card)`\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  \n  @media (max-width: ${({\n  theme\n}) => theme.breakpoints.md}) {\n    padding: 1.5rem;\n    gap: 1.5rem;\n  }\n`;\n_c4 = SpeedTestCard;\nconst HistoryCard = styled(Card)`\n  padding: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  max-height: 800px;\n  \n  @media (max-width: ${({\n  theme\n}) => theme.breakpoints.lg}) {\n    max-height: 400px;\n  }\n`;\n_c5 = HistoryCard;\nconst CardHeader = styled.div`\n  text-align: center;\n  margin-bottom: 1rem;\n  \n  h2 {\n    font-size: 1.8rem;\n    font-weight: 700;\n    background: linear-gradient(90deg, ${({\n  theme\n}) => theme.primaryLight}, ${({\n  theme\n}) => theme.primary});\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n    margin-bottom: 0.5rem;\n  }\n  \n  p {\n    color: ${({\n  theme\n}) => theme.textMuted};\n    font-size: 1rem;\n  }\n`;\n_c6 = CardHeader;\nconst GaugeContainer = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 300px;\n  margin: 0 auto;\n  \n  svg {\n    width: 100%;\n    height: auto;\n  }\n`;\n_c7 = GaugeContainer;\nconst TestIndicator = styled.div`\n  position: absolute;\n  bottom: -10px;\n  left: 0;\n  width: 100%;\n  text-align: center;\n`;\n_c8 = TestIndicator;\nconst TestLabel = styled.div`\n  font-size: 0.9rem;\n  color: ${({\n  theme\n}) => theme.textLight};\n  margin-bottom: 0.5rem;\n`;\n_c9 = TestLabel;\nconst ProgressBar = styled.div`\n  height: 4px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 2px;\n  overflow: hidden;\n`;\n_c0 = ProgressBar;\nconst ProgressFill = styled.div`\n  height: 100%;\n  background: linear-gradient(90deg, ${({\n  theme\n}) => theme.primaryLight}, ${({\n  theme\n}) => theme.primary});\n  border-radius: 2px;\n  transition: width 0.3s ease;\n`;\n_c1 = ProgressFill;\nconst MetricsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 1rem;\n  \n  @media (max-width: ${({\n  theme\n}) => theme.breakpoints.sm}) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c10 = MetricsContainer;\nconst MetricBox = styled.div`\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: ${({\n  theme\n}) => theme.borderRadius};\n  padding: 1.5rem 1rem;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n  border: 1px solid rgba(255, 255, 255, 0.05);\n`;\n_c11 = MetricBox;\nconst MetricIcon = styled.div`\n  font-size: 1.5rem;\n  color: ${({\n  theme\n}) => theme.primary};\n  margin-bottom: 0.5rem;\n`;\n_c12 = MetricIcon;\nconst MetricValue = styled.div`\n  font-size: 1.8rem;\n  font-weight: 700;\n  color: ${({\n  theme\n}) => theme.textLight};\n`;\n_c13 = MetricValue;\nconst MetricLabel = styled.div`\n  font-size: 0.9rem;\n  color: ${({\n  theme\n}) => theme.textMuted};\n`;\n_c14 = MetricLabel;\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: 200px;\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: ${({\n  theme\n}) => theme.borderRadius};\n  padding: 1rem;\n  border: 1px solid rgba(255, 255, 255, 0.05);\n`;\n_c15 = ChartContainer;\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n`;\n_c16 = ButtonContainer;\nconst StartButton = styled(motion.button)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  background: ${({\n  $isRunning,\n  theme\n}) => $isRunning ? 'rgba(79, 172, 254, 0.3)' : `linear-gradient(90deg, ${theme.primaryLight}, ${theme.primary})`};\n  color: white;\n  border: none;\n  border-radius: ${({\n  theme\n}) => theme.borderRadius};\n  padding: 1rem 2rem;\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: ${({\n  $isRunning\n}) => $isRunning ? 'not-allowed' : 'pointer'};\n  transition: all 0.3s ease;\n  box-shadow: ${({\n  $isRunning\n}) => $isRunning ? 'none' : '0 10px 20px rgba(0, 242, 254, 0.3)'};\n  \n  svg {\n    font-size: 1.2rem;\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n  }\n`;\n_c17 = StartButton;\nconst HistoryList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  overflow-y: auto;\n  padding-right: 0.5rem;\n  \n  /* Custom scrollbar for the history list */\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.1);\n    border-radius: 2px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: ${({\n  theme\n}) => theme.primary};\n    border-radius: 2px;\n  }\n`;\n_c18 = HistoryList;\nconst HistoryItem = styled.div`\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: ${({\n  theme\n}) => theme.borderRadiusSm};\n  padding: 1rem;\n  border: 1px solid rgba(255, 255, 255, 0.05);\n  transition: transform 0.2s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    background: rgba(0, 0, 0, 0.3);\n  }\n`;\n_c19 = HistoryItem;\nconst HistoryDate = styled.div`\n  font-size: 0.8rem;\n  color: ${({\n  theme\n}) => theme.textMuted};\n  margin-bottom: 0.5rem;\n`;\n_c20 = HistoryDate;\nconst HistoryMetrics = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 0.5rem;\n`;\n_c21 = HistoryMetrics;\nconst HistoryMetric = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n  font-size: 0.9rem;\n  color: ${({\n  theme\n}) => theme.textLight};\n  \n  svg {\n    color: ${({\n  theme\n}) => theme.primary};\n    font-size: 0.8rem;\n  }\n`;\n_c22 = HistoryMetric;\nconst EmptyHistory = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 200px;\n  text-align: center;\n  color: ${({\n  theme\n}) => theme.textMuted};\n  \n  p:first-child {\n    font-size: 1.1rem;\n    margin-bottom: 0.5rem;\n  }\n  \n  p:last-child {\n    font-size: 0.9rem;\n  }\n`;\n_c23 = EmptyHistory;\nexport default SpeedTest;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23;\n$RefreshReg$(_c, \"SpeedTest\");\n$RefreshReg$(_c2, \"PageContainer\");\n$RefreshReg$(_c3, \"ContentWrapper\");\n$RefreshReg$(_c4, \"SpeedTestCard\");\n$RefreshReg$(_c5, \"HistoryCard\");\n$RefreshReg$(_c6, \"CardHeader\");\n$RefreshReg$(_c7, \"GaugeContainer\");\n$RefreshReg$(_c8, \"TestIndicator\");\n$RefreshReg$(_c9, \"TestLabel\");\n$RefreshReg$(_c0, \"ProgressBar\");\n$RefreshReg$(_c1, \"ProgressFill\");\n$RefreshReg$(_c10, \"MetricsContainer\");\n$RefreshReg$(_c11, \"MetricBox\");\n$RefreshReg$(_c12, \"MetricIcon\");\n$RefreshReg$(_c13, \"MetricValue\");\n$RefreshReg$(_c14, \"MetricLabel\");\n$RefreshReg$(_c15, \"ChartContainer\");\n$RefreshReg$(_c16, \"ButtonContainer\");\n$RefreshReg$(_c17, \"StartButton\");\n$RefreshReg$(_c18, \"HistoryList\");\n$RefreshReg$(_c19, \"HistoryItem\");\n$RefreshReg$(_c20, \"HistoryDate\");\n$RefreshReg$(_c21, \"HistoryMetrics\");\n$RefreshReg$(_c22, \"HistoryMetric\");\n$RefreshReg$(_c23, \"EmptyHistory\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","motion","FiDownload","FiUpload","FiClock","FiRefreshCw","FiShare2","FiSave","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","SpeedTest","_s","isRunning","setIsRunning","downloadSpeed","setDownloadSpeed","uploadSpeed","setUploadSpeed","ping","setPing","progress","setProgress","currentTest","setCurrentTest","testHistory","setTestHistory","chartData","setChartData","gaugeRef","savedHistory","localStorage","getItem","JSON","parse","current","speed","maxSpeed","percentage","Math","min","circumference","PI","dashOffset","style","strokeDashoffset","runSpeedTest","setTimeout","pingValue","floor","random","simulateSpeedTest","type","duration","CHART_UPDATE_MS","startTime","Date","now","endTime","baseSpeed","newChartData","updateSpeed","elapsedTime","testResult","id","date","toLocaleString","download","upload","updatedHistory","slice","setItem","stringify","progressPercentage","fluctuation","sin","randomFactor","speedFactor","calculatedSpeed","clampedSpeed","max","toFixed","parseFloat","push","time","round","length","shift","formatSpeed","pageVariants","initial","opacity","y","animate","transition","exit","PageContainer","variants","children","ContentWrapper","SpeedTestCard","CardHeader","fileName","_jsxFileName","lineNumber","columnNumber","GaugeContainer","viewBox","className","x1","y1","x2","y2","offset","stopColor","d","fill","stroke","strokeWidth","strokeLinecap","ref","strokeDasharray","x","textAnchor","fontSize","fontWeight","TestIndicator","TestLabel","ProgressBar","ProgressFill","width","MetricsContainer","MetricBox","MetricIcon","MetricValue","MetricLabel","ChartContainer","height","data","margin","top","right","left","bottom","dataKey","label","value","position","angle","contentStyle","backgroundColor","border","borderRadius","color","formatter","labelFormatter","dot","activeDot","r","ButtonContainer","StartButton","onClick","disabled","whileHover","scale","whileTap","$isRunning","HistoryCard","HistoryList","map","test","HistoryItem","HistoryDate","HistoryMetrics","HistoryMetric","EmptyHistory","_c","div","theme","breakpoints","md","_c2","lg","_c3","Card","card","borderRadiusLg","cardBorder","cardShadow","blur","_c4","_c5","primaryLight","primary","textMuted","_c6","_c7","_c8","textLight","_c9","_c0","_c1","sm","_c10","_c11","_c12","_c13","_c14","_c15","_c16","button","_c17","_c18","borderRadiusSm","_c19","_c20","_c21","_c22","_c23","$RefreshReg$"],"sources":["D:/faltu project/speedtest.js/src/pages/SpeedTest.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\nimport { FiDownload, FiUpload, FiClock, FiRefreshCw, FiShare2, FiSave } from 'react-icons/fi';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nconst SpeedTest = () => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [downloadSpeed, setDownloadSpeed] = useState(0);\r\n  const [uploadSpeed, setUploadSpeed] = useState(0);\r\n  const [ping, setPing] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentTest, setCurrentTest] = useState('');\r\n  const [testHistory, setTestHistory] = useState([]);\r\n  const [chartData, setChartData] = useState([]);\r\n  const gaugeRef = useRef(null);\r\n\r\n  // Load test history from localStorage on component mount\r\n  useEffect(() => {\r\n    const savedHistory = localStorage.getItem('speedTestHistory');\r\n    if (savedHistory) {\r\n      setTestHistory(JSON.parse(savedHistory));\r\n    }\r\n  }, []);\r\n\r\n  // Update gauge fill based on current speed\r\n  useEffect(() => {\r\n    if (!gaugeRef.current) return;\r\n    \r\n    const speed = currentTest === 'download' ? downloadSpeed : uploadSpeed;\r\n    const maxSpeed = 200; // Maximum speed for gauge (200 Mbps)\r\n    const percentage = Math.min((speed / maxSpeed) * 100, 100);\r\n    \r\n    // Calculate the stroke-dasharray and stroke-dashoffset\r\n    const circumference = 2 * Math.PI * 70;\r\n    const dashOffset = circumference * (1 - percentage / 100);\r\n    \r\n    gaugeRef.current.style.strokeDashoffset = dashOffset;\r\n  }, [downloadSpeed, uploadSpeed, currentTest]);\r\n\r\n  // Simulate speed test\r\n  const runSpeedTest = () => {\r\n    setIsRunning(true);\r\n    setProgress(0);\r\n    setDownloadSpeed(0);\r\n    setUploadSpeed(0);\r\n    setPing(0);\r\n    setChartData([]);\r\n    \r\n    // Simulate ping test\r\n    setCurrentTest('ping');\r\n    setTimeout(() => {\r\n      const pingValue = Math.floor(Math.random() * 30) + 10; // 10-40ms\r\n      setPing(pingValue);\r\n      \r\n      // Simulate download test\r\n      setCurrentTest('download');\r\n      simulateSpeedTest('download', 8000); // 8 seconds for download test\r\n    }, 1000);\r\n  };\r\n\r\n  // Simulate speed test with realistic fluctuations\r\n  const simulateSpeedTest = (type, duration) => {\r\n    const CHART_UPDATE_MS = 500; // throttle chart updates to every 500ms\r\n    const startTime = Date.now();\r\n    const endTime = startTime + duration;\r\n    const maxSpeed = type === 'download' ? 200 : 100; // Max download: 200Mbps, Max upload: 100Mbps\r\n    const baseSpeed = type === 'download'\r\n      ? Math.floor(Math.random() * 100) + 50 // 50-150 Mbps for download\r\n      : Math.floor(Math.random() * 50) + 20; // 20-70 Mbps for upload\r\n\r\n    // Local accumulator to prevent state thrashing\r\n    let newChartData = [...chartData];\r\n\r\n    const updateSpeed = () => {\r\n      const now = Date.now();\r\n      const elapsedTime = now - startTime;\r\n\r\n      if (now >= endTime) {\r\n        // Test complete\r\n        if (type === 'download') {\r\n          setCurrentTest('upload');\r\n          simulateSpeedTest('upload', 5000);\r\n        } else {\r\n          const testResult = {\r\n            id: Date.now(),\r\n            date: new Date().toLocaleString(),\r\n            download: downloadSpeed,\r\n            upload: uploadSpeed,\r\n            ping: ping,\r\n          };\r\n\r\n          const updatedHistory = [testResult, ...testHistory].slice(0, 10);\r\n          setTestHistory(updatedHistory);\r\n          localStorage.setItem('speedTestHistory', JSON.stringify(updatedHistory));\r\n\r\n          setIsRunning(false);\r\n          setCurrentTest('');\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      // Calculate progress percentage\r\n      const progressPercentage = (elapsedTime / duration) * 100;\r\n      setProgress(progressPercentage);\r\n\r\n      // Simulate smoother fluctuations\r\n      const fluctuation = Math.sin(elapsedTime / 800) * 8;\r\n      const randomFactor = (Math.random() - 0.5) * 6;\r\n      const speedFactor = Math.min(elapsedTime / (duration * 0.4), 1);\r\n      const calculatedSpeed = baseSpeed * speedFactor + fluctuation + randomFactor;\r\n      const clampedSpeed = Math.max(Math.min(calculatedSpeed, maxSpeed), 0).toFixed(1);\r\n\r\n      if (type === 'download') setDownloadSpeed(parseFloat(clampedSpeed));\r\n      else setUploadSpeed(parseFloat(clampedSpeed));\r\n\r\n      // update chart data (throttled)\r\n      newChartData.push({ time: Math.round(elapsedTime / 100) / 10, [type]: parseFloat(clampedSpeed) });\r\n      if (newChartData.length > 30) newChartData.shift();\r\n      setChartData([...newChartData]);\r\n\r\n      setTimeout(updateSpeed, CHART_UPDATE_MS);\r\n    };\r\n\r\n    updateSpeed();\r\n  };\r\n\r\n  // Format speed with appropriate unit\r\n  const formatSpeed = (speed) => {\r\n    if (speed < 1) return `${(speed * 1000).toFixed(0)} Kbps`;\r\n    return `${speed} Mbps`;\r\n  };\r\n\r\n  // Page transition variants\r\n  const pageVariants = {\r\n    initial: { opacity: 0, y: 20 },\r\n    animate: { opacity: 1, y: 0, transition: { duration: 0.5 } },\r\n    exit: { opacity: 0, y: -20, transition: { duration: 0.3 } }\r\n  };\r\n\r\n  return (\r\n    <PageContainer\r\n      initial=\"initial\"\r\n      animate=\"animate\"\r\n      exit=\"exit\"\r\n      variants={pageVariants}\r\n    >\r\n      <ContentWrapper>\r\n        <SpeedTestCard>\r\n          <CardHeader>\r\n            <h2>Internet Speed Test</h2>\r\n            <p>Test your connection speed</p>\r\n          </CardHeader>\r\n          \r\n          <GaugeContainer>\r\n            <svg viewBox=\"0 0 200 100\" className=\"gauge\">\r\n              <defs>\r\n                <linearGradient id=\"gaugeGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                  <stop offset=\"0%\" stopColor=\"#00f2fe\" />\r\n                  <stop offset=\"100%\" stopColor=\"#4facfe\" />\r\n                </linearGradient>\r\n              </defs>\r\n              <path \r\n                className=\"gauge-background\" \r\n                d=\"M20,90 A70,70 0 1,1 180,90\" \r\n                fill=\"none\"\r\n                stroke=\"rgba(255, 255, 255, 0.1)\"\r\n                strokeWidth=\"8\"\r\n                strokeLinecap=\"round\"\r\n              />\r\n              <path \r\n                ref={gaugeRef}\r\n                className=\"gauge-fill\" \r\n                d=\"M20,90 A70,70 0 1,1 180,90\" \r\n                fill=\"none\"\r\n                stroke=\"url(#gaugeGradient)\"\r\n                strokeWidth=\"8\"\r\n                strokeLinecap=\"round\"\r\n                strokeDasharray=\"439.6\"\r\n                strokeDashoffset=\"439.6\"\r\n              />\r\n              <text \r\n                x=\"100\" \r\n                y=\"75\" \r\n                textAnchor=\"middle\" \r\n                fontSize=\"24\" \r\n                fontWeight=\"bold\"\r\n                fill=\"white\"\r\n              >\r\n                {currentTest === 'download' ? downloadSpeed : uploadSpeed}\r\n              </text>\r\n              <text \r\n                x=\"100\" \r\n                y=\"95\" \r\n                textAnchor=\"middle\" \r\n                fontSize=\"12\"\r\n                fill=\"rgba(255, 255, 255, 0.7)\"\r\n              >\r\n                Mbps\r\n              </text>\r\n            </svg>\r\n            \r\n            {isRunning && (\r\n              <TestIndicator>\r\n                <TestLabel>\r\n                  {currentTest === 'ping' ? 'Testing Ping...' : \r\n                   currentTest === 'download' ? 'Download Test' : 'Upload Test'}\r\n                </TestLabel>\r\n                <ProgressBar>\r\n                  <ProgressFill style={{ width: `${progress}%` }} />\r\n                </ProgressBar>\r\n              </TestIndicator>\r\n            )}\r\n          </GaugeContainer>\r\n          \r\n          <MetricsContainer>\r\n            <MetricBox>\r\n              <MetricIcon>\r\n                <FiDownload />\r\n              </MetricIcon>\r\n              <MetricValue>{downloadSpeed}</MetricValue>\r\n              <MetricLabel>Download (Mbps)</MetricLabel>\r\n            </MetricBox>\r\n            \r\n            <MetricBox>\r\n              <MetricIcon>\r\n                <FiUpload />\r\n              </MetricIcon>\r\n              <MetricValue>{uploadSpeed}</MetricValue>\r\n              <MetricLabel>Upload (Mbps)</MetricLabel>\r\n            </MetricBox>\r\n            \r\n            <MetricBox>\r\n              <MetricIcon>\r\n                <FiClock />\r\n              </MetricIcon>\r\n              <MetricValue>{ping}</MetricValue>\r\n              <MetricLabel>Ping (ms)</MetricLabel>\r\n            </MetricBox>\r\n          </MetricsContainer>\r\n          \r\n          <ChartContainer>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n              <LineChart data={chartData} margin={{ top: 5, right: 20, left: 0, bottom: 5 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(255,255,255,0.1)\" />\r\n                <XAxis \r\n                  dataKey=\"time\" \r\n                  label={{ value: 'Time (s)', position: 'insideBottomRight', offset: -5, fill: 'rgba(255,255,255,0.7)' }}\r\n                  stroke=\"rgba(255,255,255,0.5)\"\r\n                />\r\n                <YAxis \r\n                  label={{ value: 'Speed (Mbps)', angle: -90, position: 'insideLeft', fill: 'rgba(255,255,255,0.7)' }}\r\n                  stroke=\"rgba(255,255,255,0.5)\"\r\n                />\r\n                <Tooltip \r\n                  contentStyle={{ \r\n                    backgroundColor: 'rgba(30, 41, 59, 0.9)', \r\n                    border: 'none',\r\n                    borderRadius: '8px',\r\n                    color: 'white'\r\n                  }}\r\n                  formatter={(value) => [`${value} Mbps`]}\r\n                  labelFormatter={(value) => `Time: ${value}s`}\r\n                />\r\n                <Line \r\n                  type=\"monotone\" \r\n                  dataKey=\"download\" \r\n                  stroke=\"#00f2fe\" \r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={{ r: 6 }}\r\n                />\r\n                <Line \r\n                  type=\"monotone\" \r\n                  dataKey=\"upload\" \r\n                  stroke=\"#4facfe\" \r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={{ r: 6 }}\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </ChartContainer>\r\n          \r\n          <ButtonContainer>\r\n            <StartButton \r\n              onClick={runSpeedTest} \r\n              disabled={isRunning}\r\n              whileHover={{ scale: isRunning ? 1 : 1.05 }}\r\n              whileTap={{ scale: isRunning ? 1 : 0.95 }}\r\n              $isRunning={isRunning}\r\n            >\r\n              {isRunning ? 'Testing...' : 'Start Test'}\r\n              {!isRunning && <FiRefreshCw />}\r\n            </StartButton>\r\n          </ButtonContainer>\r\n        </SpeedTestCard>\r\n        \r\n        <HistoryCard>\r\n          <CardHeader>\r\n            <h2>Test History</h2>\r\n            <p>Your recent speed tests</p>\r\n          </CardHeader>\r\n          \r\n          {testHistory.length > 0 ? (\r\n            <HistoryList>\r\n              {testHistory.map((test) => (\r\n                <HistoryItem key={test.id}>\r\n                  <HistoryDate>{test.date}</HistoryDate>\r\n                  <HistoryMetrics>\r\n                    <HistoryMetric>\r\n                      <FiDownload />\r\n                      <span>{test.download} Mbps</span>\r\n                    </HistoryMetric>\r\n                    <HistoryMetric>\r\n                      <FiUpload />\r\n                      <span>{test.upload} Mbps</span>\r\n                    </HistoryMetric>\r\n                    <HistoryMetric>\r\n                      <FiClock />\r\n                      <span>{test.ping} ms</span>\r\n                    </HistoryMetric>\r\n                  </HistoryMetrics>\r\n                </HistoryItem>\r\n              ))}\r\n            </HistoryList>\r\n          ) : (\r\n            <EmptyHistory>\r\n              <p>No test history yet</p>\r\n              <p>Run your first speed test to see results here</p>\r\n            </EmptyHistory>\r\n          )}\r\n        </HistoryCard>\r\n      </ContentWrapper>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nconst PageContainer = styled(motion.div)`\r\n  padding: 6rem 1rem 2rem;\r\n  width: 100%;\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  min-height: 100vh;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoints.md}) {\r\n    padding: 5rem 1rem 2rem;\r\n  }\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 350px;\r\n  gap: 1.5rem;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoints.lg}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst Card = styled.div`\r\n  background: ${({ theme }) => theme.card};\r\n  border-radius: ${({ theme }) => theme.borderRadiusLg};\r\n  border: 1px solid ${({ theme }) => theme.cardBorder};\r\n  box-shadow: ${({ theme }) => theme.cardShadow};\r\n  backdrop-filter: ${({ theme }) => theme.blur};\r\n  overflow: hidden;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  \r\n  &:hover {\r\n    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.4);\r\n  }\r\n`;\r\n\r\nconst SpeedTestCard = styled(Card)`\r\n  padding: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoints.md}) {\r\n    padding: 1.5rem;\r\n    gap: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst HistoryCard = styled(Card)`\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: 800px;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoints.lg}) {\r\n    max-height: 400px;\r\n  }\r\n`;\r\n\r\nconst CardHeader = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 1rem;\r\n  \r\n  h2 {\r\n    font-size: 1.8rem;\r\n    font-weight: 700;\r\n    background: linear-gradient(90deg, ${({ theme }) => theme.primaryLight}, ${({ theme }) => theme.primary});\r\n    -webkit-background-clip: text;\r\n    background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  p {\r\n    color: ${({ theme }) => theme.textMuted};\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst GaugeContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 300px;\r\n  margin: 0 auto;\r\n  \r\n  svg {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n`;\r\n\r\nconst TestIndicator = styled.div`\r\n  position: absolute;\r\n  bottom: -10px;\r\n  left: 0;\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst TestLabel = styled.div`\r\n  font-size: 0.9rem;\r\n  color: ${({ theme }) => theme.textLight};\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst ProgressBar = styled.div`\r\n  height: 4px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ProgressFill = styled.div`\r\n  height: 100%;\r\n  background: linear-gradient(90deg, ${({ theme }) => theme.primaryLight}, ${({ theme }) => theme.primary});\r\n  border-radius: 2px;\r\n  transition: width 0.3s ease;\r\n`;\r\n\r\nconst MetricsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 1rem;\r\n  \r\n  @media (max-width: ${({ theme }) => theme.breakpoints.sm}) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst MetricBox = styled.div`\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: ${({ theme }) => theme.borderRadius};\r\n  padding: 1.5rem 1rem;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.05);\r\n`;\r\n\r\nconst MetricIcon = styled.div`\r\n  font-size: 1.5rem;\r\n  color: ${({ theme }) => theme.primary};\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst MetricValue = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: 700;\r\n  color: ${({ theme }) => theme.textLight};\r\n`;\r\n\r\nconst MetricLabel = styled.div`\r\n  font-size: 0.9rem;\r\n  color: ${({ theme }) => theme.textMuted};\r\n`;\r\n\r\nconst ChartContainer = styled.div`\r\n  width: 100%;\r\n  height: 200px;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: ${({ theme }) => theme.borderRadius};\r\n  padding: 1rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.05);\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst StartButton = styled(motion.button)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 0.5rem;\r\n  background: ${({ $isRunning, theme }) => \r\n    $isRunning \r\n      ? 'rgba(79, 172, 254, 0.3)'\r\n      : `linear-gradient(90deg, ${theme.primaryLight}, ${theme.primary})`\r\n  };\r\n  color: white;\r\n  border: none;\r\n  border-radius: ${({ theme }) => theme.borderRadius};\r\n  padding: 1rem 2rem;\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  cursor: ${({ $isRunning }) => ($isRunning ? 'not-allowed' : 'pointer')};\r\n  transition: all 0.3s ease;\r\n  box-shadow: ${({ $isRunning }) => \r\n    $isRunning ? 'none' : '0 10px 20px rgba(0, 242, 254, 0.3)'\r\n  };\r\n  \r\n  svg {\r\n    font-size: 1.2rem;\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst HistoryList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.75rem;\r\n  overflow-y: auto;\r\n  padding-right: 0.5rem;\r\n  \r\n  /* Custom scrollbar for the history list */\r\n  &::-webkit-scrollbar {\r\n    width: 4px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-track {\r\n    background: rgba(0, 0, 0, 0.1);\r\n    border-radius: 2px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-thumb {\r\n    background: ${({ theme }) => theme.primary};\r\n    border-radius: 2px;\r\n  }\r\n`;\r\n\r\nconst HistoryItem = styled.div`\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: ${({ theme }) => theme.borderRadiusSm};\r\n  padding: 1rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.05);\r\n  transition: transform 0.2s ease;\r\n  \r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    background: rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\nconst HistoryDate = styled.div`\r\n  font-size: 0.8rem;\r\n  color: ${({ theme }) => theme.textMuted};\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst HistoryMetrics = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst HistoryMetric = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.25rem;\r\n  font-size: 0.9rem;\r\n  color: ${({ theme }) => theme.textLight};\r\n  \r\n  svg {\r\n    color: ${({ theme }) => theme.primary};\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst EmptyHistory = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 200px;\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.textMuted};\r\n  \r\n  p:first-child {\r\n    font-size: 1.1rem;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  p:last-child {\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nexport default SpeedTest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}